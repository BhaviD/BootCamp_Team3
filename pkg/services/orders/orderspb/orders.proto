syntax="proto3";

package orderspb;

option go_package="orders/orderspb";

message OrdersCountRequest {}
message OrdersCountResponse {
    string count=1;
}

message PostOrderRequest{
    string neworder=1;
}

message PostOrderResponse{
    string updatedorders=1;
}


message OrderDetailRequest {
    string OrderNumber=1;
}
message OrderDetailResponse {
    string orderDetail=1;
}

message PopularDishResponse {
    string DishName=1;
}
message PopularDishRequest {
    string CityName = 1;
}

message UpdateDishRequest {
    int64 orderId=1;
    string updatedDish=2;
}

message UpdateDishResponse {
    string status=1;
}

message Item {
    int32 id=1;
    string name=2;
    string cuisine=3;
    float cost=4;
    int32 quantity=5;
}

message Address {
    int32 house_no=1;
    string street=2;
    string city=3;
    int32 pin=4;
}

message CreateOrderRequest {
    string res_id=1;
    string customer_id=2;
    repeated Item Items=3;
    float discount=4;
    Address address=5;
}

message CreateOrderResponse {
    bool status=1;
    string message=2;
    string order_id=3;
}

message UpdateOrderItemRequest {
    string order_id=1;
    string customer_id=2;
    int32 item_id=3;
    int32 quantity=4;
}

message UpdateOrderItemResponse {
    bool status=1;
    string message=2;
}

message GetOrdersCountRequest{}

message GetOrdersCountResponse{
    int64 count=1;
}

service OrdersService {
    rpc GetOrderDetail(OrderDetailRequest) returns (OrderDetailResponse) {}
    rpc GetPopularDish(PopularDishRequest) returns (PopularDishResponse){}
    rpc UpdateDish(UpdateDishRequest) returns (UpdateDishResponse){}
    rpc PostOrder(PostOrderRequest) returns (PostOrderResponse){}

    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse){}
    rpc UpdateOrderItem(UpdateOrderItemRequest) returns (UpdateOrderItemResponse){}
    rpc GetOrdersCount(GetOrdersCountRequest) returns (GetOrdersCountResponse) {}
}